<Window x:Class="Core.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:components="clr-namespace:Components;assembly=Components"
        xmlns:cpu="clr-namespace:Components.CPUPerformance;assembly=Components"
        xmlns:loc="clr-namespace:Core" 
        xmlns:controls="clr-namespace:Components;assembly=Components"
        xmlns:local="clr-namespace:Core"
        Title="MainWindow" Width="900" Height="600">
    <Window.Resources>
        <loc:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <loc:MainWindow x:Key="MainWindow"/>
        <Style x:Key="TreeExpanderStyle" TargetType="CheckBox">
            <Setter Property="Background" Value="#FF448DCA"/>
            <Setter Property="Foreground" Value="#FF000000"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid HorizontalAlignment="Left">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="IsExpandedIcon" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="IsCollapsedIcon" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate">
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Path x:Name="IsExpandedIcon" Data="M2,2 L14,7 L2,14 z" Fill="{TemplateBinding BorderBrush}" UseLayoutRounding="False" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed" />
                            <Path x:Name="IsCollapsedIcon" Data="M2,2 L14,2 L7,14 z" Fill="{TemplateBinding BorderBrush}" UseLayoutRounding="False" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed" />
                            <Rectangle x:Name="IndeterminateIcon" Fill="#FF333333" Height="16" Width="16" Opacity="0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="3*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="3*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <DataGrid 
            ItemsSource="{Binding ClientObjectManager.CustomCollection}"
            AutoGenerateColumns="False" Grid.RowSpan="2">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Clients" Binding="{Binding Name}" Width="*"/>
                <DataGridTemplateColumn Header="Sensors" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ItemsControl ItemsSource="{Binding sensors}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <Button Content="{Binding name}" Margin="4" Click="Button_Toggle_Clicked" Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType=ItemsControl}}"/>
                                            <ComboBox x:Name="Combo" ItemsSource="{Binding Path=Components, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" DisplayMemberPath="ComponentDisplayName" SelectedValuePath="{Binding Path=DataContext}" SelectionChanged="Combo_On_Change"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <local:ComponentsDataGrid Grid.Row="1"/>
        <Border Grid.Column="1" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="499" Grid.RowSpan="2" VerticalAlignment="Top" Width="615">
            <Viewbox StretchDirection="Both" Stretch="Uniform">
                <Grid Name="gridMain">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="500px" />
                        <ColumnDefinition Width="500px" />
                    </Grid.ColumnDefinitions>


                </Grid>
            </Viewbox>
        </Border>

    </Grid>
</Window>
